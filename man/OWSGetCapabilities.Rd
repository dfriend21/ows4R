% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OWSGetCapabilities.R
\docType{class}
\name{OWSGetCapabilities}
\alias{OWSGetCapabilities}
\title{OWSGetCapabilities}
\format{
\code{\link{R6Class}} object.
}
\value{
Object of \code{\link{R6Class}} for modelling a GetCapabilities request
}
\description{
OWSGetCapabilities

OWSGetCapabilities
}
\note{
Abstract class used internally by \pkg{ows4R}
}
\author{
Emmanuel Blondel <emmanuel.blondel1@gmail.com>
}
\keyword{GetCapabilities}
\keyword{OGC}
\section{Super classes}{
\code{\link[ows4R:OGCAbstractObject]{ows4R::OGCAbstractObject}} -> \code{\link[ows4R:OWSHttpRequest]{ows4R::OWSHttpRequest}} -> \code{OWSGetCapabilities}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{OWSGetCapabilities$new()}}
\item \href{#method-clone}{\code{OWSGetCapabilities$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="encode">}\href{../../ows4R/html/OGCAbstractObject.html#method-encode}{\code{ows4R::OGCAbstractObject$encode()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="ERROR">}\href{../../ows4R/html/OGCAbstractObject.html#method-ERROR}{\code{ows4R::OGCAbstractObject$ERROR()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getClass">}\href{../../ows4R/html/OGCAbstractObject.html#method-getClass}{\code{ows4R::OGCAbstractObject$getClass()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getClassName">}\href{../../ows4R/html/OGCAbstractObject.html#method-getClassName}{\code{ows4R::OGCAbstractObject$getClassName()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="getNamespaceDefinition">}\href{../../ows4R/html/OGCAbstractObject.html#method-getNamespaceDefinition}{\code{ows4R::OGCAbstractObject$getNamespaceDefinition()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="INFO">}\href{../../ows4R/html/OGCAbstractObject.html#method-INFO}{\code{ows4R::OGCAbstractObject$INFO()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="isFieldInheritedFrom">}\href{../../ows4R/html/OGCAbstractObject.html#method-isFieldInheritedFrom}{\code{ows4R::OGCAbstractObject$isFieldInheritedFrom()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="logger">}\href{../../ows4R/html/OGCAbstractObject.html#method-logger}{\code{ows4R::OGCAbstractObject$logger()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OGCAbstractObject" data-id="WARN">}\href{../../ows4R/html/OGCAbstractObject.html#method-WARN}{\code{ows4R::OGCAbstractObject$WARN()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="execute">}\href{../../ows4R/html/OWSHttpRequest.html#method-execute}{\code{ows4R::OWSHttpRequest$execute()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="getCapabilities">}\href{../../ows4R/html/OWSHttpRequest.html#method-getCapabilities}{\code{ows4R::OWSHttpRequest$getCapabilities()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="getException">}\href{../../ows4R/html/OWSHttpRequest.html#method-getException}{\code{ows4R::OWSHttpRequest$getException()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="getRequest">}\href{../../ows4R/html/OWSHttpRequest.html#method-getRequest}{\code{ows4R::OWSHttpRequest$getRequest()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="getRequestHeaders">}\href{../../ows4R/html/OWSHttpRequest.html#method-getRequestHeaders}{\code{ows4R::OWSHttpRequest$getRequestHeaders()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="getResponse">}\href{../../ows4R/html/OWSHttpRequest.html#method-getResponse}{\code{ows4R::OWSHttpRequest$getResponse()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="getResult">}\href{../../ows4R/html/OWSHttpRequest.html#method-getResult}{\code{ows4R::OWSHttpRequest$getResult()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="getStatus">}\href{../../ows4R/html/OWSHttpRequest.html#method-getStatus}{\code{ows4R::OWSHttpRequest$getStatus()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ows4R" data-topic="OWSHttpRequest" data-id="setResult">}\href{../../ows4R/html/OWSHttpRequest.html#method-setResult}{\code{ows4R::OWSHttpRequest$setResult()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes an \link{OWSGetCapabilities} service request
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OWSGetCapabilities$new(
  element = NULL,
  namespacePrefix = NULL,
  url,
  service,
  version,
  user = NULL,
  pwd = NULL,
  token = NULL,
  headers = c(),
  config = httr::config(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{element}}{element}

\item{\code{namespacePrefix}}{namespace prefix}

\item{\code{url}}{url}

\item{\code{service}}{service name}

\item{\code{version}}{service version}

\item{\code{user}}{user}

\item{\code{pwd}}{password}

\item{\code{token}}{token}

\item{\code{headers}}{headers}

\item{\code{config}}{config}

\item{\code{...}}{any other parameter to pass to the request}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OWSGetCapabilities$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
